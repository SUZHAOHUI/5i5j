package com.oio.wawj.dao.impl;


import java.sql.SQLException;
import java.util.List;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.springframework.orm.hibernate3.HibernateCallback;

import com.oio.wawj.bean.CustomerSource;
import com.oio.wawj.bean.Template;
import com.oio.wawj.dao.TemplateDAO;


public class TemplateDAOImpl extends BaseDAOImpl<Template,Short> implements TemplateDAO {

	
	public String getfindTemplate(){
		return  ( String) getHibernateTemplate().execute(
				new HibernateCallback() {
					public Object doInHibernate(Session s)
							throws HibernateException, SQLException {
						 JSONObject jsonObject = new JSONObject();
						 JSONArray jsonArray = new JSONArray(); 
						String hql = "from  Template where 1=1  ";
						
						Query query = s.createQuery(hql);
						List list = query.list();
						
						for(int i = 0; i < list.size(); i++){
							Template sf = (Template)list.get(i);	
							jsonObject.put("id",sf.getTemplateId());
							jsonObject.put("name",sf.getName());		
							jsonObject.put("content",sf.getContent());		
							jsonObject.put("status",sf.getStatus());		
							jsonObject.put("type",sf.getType());		
							jsonArray.add(jsonObject);
						}
						return jsonArray.toString(); 
					}
				});
		
		
	}

	
	
	public String getfindTemplateName(){
		return  ( String) getHibernateTemplate().execute(
				new HibernateCallback() {
					public Object doInHibernate(Session s)
							throws HibernateException, SQLException {
						 JSONObject jsonObject = new JSONObject();
						 JSONArray jsonArray = new JSONArray(); 
						String hql = "from  Template where 1=1  ";
						
						Query query = s.createQuery(hql);
						List list = query.list();
						
						for(int i = 0; i < list.size(); i++){
							Template sf = (Template)list.get(i);	
							jsonObject.put("id",sf.getTemplateId());
							jsonObject.put("name",sf.getName());		
/*							jsonObject.put("content",sf.getContent());		
							jsonObject.put("status",sf.getStatus());		
							jsonObject.put("type",sf.getType());	*/	
							jsonArray.add(jsonObject);
						}
						return jsonArray.toString(); 
					}
				});
		
		
	}
	
	public Template getfindById(final short templateId){
		return  ( Template) getHibernateTemplate().execute(
				new HibernateCallback() {
					public Object doInHibernate(Session s)
							throws HibernateException, SQLException {
						JSONObject jsonObject = new JSONObject();
						JSONArray jsonArray = new JSONArray(); 
						String hql = "from  Template where templateId = "+templateId;
						System.out.println(hql);
						Query query = s.createQuery(hql);
						
						return query.list().get(0);	 
					}
				});
		
		
	}
	
	
	public  String getfindNotificationScenario(){
		return  ( String) getHibernateTemplate().execute(
				new HibernateCallback() {
					public Object doInHibernate(Session s)
							throws HibernateException, SQLException {
						 JSONObject jsonObject = new JSONObject();
						 JSONArray jsonArray = new JSONArray();  
						String hql = "from  Template  where status='c'";
						
						Query query = s.createQuery(hql);
						List list = query.list();
					
						for(int i = 0; i < list.size(); i++){
							Template sf = (Template)list.get(i);	
							jsonObject.put("templateId",String.valueOf(sf.getTemplateId()));
							jsonObject.put("templateName",sf.getName());		
							jsonArray.add(jsonObject);
						}
						return jsonArray.toString(); 
					}
				});
	}
	
	
}
